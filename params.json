{"name":"jquery-selectbox","tagline":"A jQuery plugin for replacing <select> elements.","body":"# jQuery selectBox: A styleable replacement for SELECT elements\r\n\r\n_Licensed under the MIT license: http://opensource.org/licenses/MIT_\r\n\r\n## Features\r\n\r\n* Supports OPTGROUPS\r\n* Supports standard dropdown controls\r\n* Supports multi-select controls (i.e. multiple=\"multiple\")\r\n* Supports inline controls (i.e. size=\"5\")\r\n* Fully accessible via keyboard\r\n* Shift + click (or shift + enter) to select a range of options in multi-select controls\r\n* Type to search when the control has focus\r\n* Auto-height based on the size attribute (to use, omit the height property in your CSS!)\r\n* Tested in IE7-IE9, Firefox 3-4, recent WebKit browsers, and Opera\r\n\r\n\r\n## Usage\r\n\r\nLink to the JS file:\r\n\r\n```html\r\n<script src=\"jquery.selectbox.min.js\" type=\"text/javascript\"></script>\r\n```\r\n\r\nAdd the CSS file (or append contents to your own stylesheet):\r\n\r\n```html\r\n<link href=\"jquery.selectbox.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n```\r\n\r\nTo initialize:\r\n\r\n```javascript\r\n// default\r\n$('select').selectBox();\r\n\r\n// or with custom settings\r\n$('select').selectBox({\r\n    mobile: true,\r\n    menuSpeed: 'fast'\r\n});\r\n```\r\n\r\n## Settings\r\n\r\n| Key            | Default       | Values                     |  Description                                     |\r\n| ---------------|:-------------:|---------------------------:|-------------------------------------------------:|\r\n| mobile         | `false`       | Boolean                    | Disables the widget for mobile devices           |\r\n| menuTransition | `default`     | `default`, `slide`, `fade` | The show/hide transition for dropdown menus      |\r\n| menuSpeed      | `normal`      | `slow`, `normal`, `fast`   | The show/hide transition speed                   |\r\n| loopOptions    | `false`       | Boolean                    | Flag to allow arrow keys to loop through options |\r\n\r\n\r\nTo specify settings after the init, use this syntax:\r\n\r\n```javascript\r\n$('select').selectBox('settings', {settingName: value, ... });\r\n```\r\n\r\n## Methods\r\n\r\nTo call a method use this syntax:\r\n\r\n```javascript\r\n$('select').selectBox('methodName', [option]);\r\n```\r\n\r\n### Available methods\r\n\r\n\r\n| Key            | Description                                                                                   |\r\n| ---------------|-----------------------------------------------------------------------------------------------|\r\n| create         | Creates the control (default)                                                                 |\r\n| destroy        | Destroys the selectBox control and reverts back to the original form control                  |\r\n| disable        | Disables the control (i.e. disabled=\"disabled\")                                               |\r\n| enable         | Enables the control                                                                           |\r\n| value          | If passed with a value, sets the control to that value; otherwise returns the current value   |\r\n| options        | If passed either a string of HTML or a JSON object, replaces the existing options; otherwise Returns the options container element as a jQuery object |\r\n| control        | Returns the selectBox control element (an anchor tag) for working with directly               |\r\n| refresh        | Updates the selectBox control's options based on the original controls options                |\r\n| instance       | Returns the SelectBox instance, where you have more methods available (only in v1.2.0-dev     |\r\n                 | available) as in the `SelectBox` class below.                                                 |\r\n\r\n## API `SelectBox`\r\n\r\nYou can instantiate the selectBox also through a classic OOP way:\r\n\r\n```javascript\r\nvar selectBox = new SelectBox($('#mySelectBox')[, settings = {}]);\r\nselectBox.showMenu();\r\n```\r\n\r\nThe public methods are:\r\n\r\n```javascript\r\nrefresh()\r\ndestroy()\r\ndisable()\r\nenable()\r\n\r\ngetLabelClass()\r\ngetLabelText()\r\ngetSelectElement()\r\ngetOptions(type)\r\n\r\nhideMenus()\r\nshowMenu()\r\n\r\nsetLabel()\r\nsetOptions(options)\r\nsetValue(value)\r\n\r\nremoveHover(HTMLElement li)\r\naddHover(HTMLElement li)\r\n\r\ndisableSelection(HTMLElement selector)\r\ngenerateOptions(jQuery self, jQuery options)\r\nhandleKeyDown(event)\r\nhandleKeyPress(event)\r\ninit(options)\r\nkeepOptionInView(jQuery li, Boolean center)\r\nrefresh()\r\nremoveHover(HTMLElement li)\r\nselectOption(HTMLElement li, event)\r\n```\r\n\r\n## Events\r\n\r\nEvents are fired on the original select element. You can bind events like this:\r\n\r\n```javascript\r\n$('select').selectBox().change(function () {\r\n    alert($(this).val());\r\n});\r\n```\r\n\r\n### Available events\r\n\r\n| Key            | Description                                                                                   |\r\n| ---------------|-----------------------------------------------------------------------------------------------|\r\n| focus          | Fired when the control gains focus                                                            |\r\n| blur           | Fired when the control loses focus                                                            |\r\n| change         | Fired when the value of a control changes                                                     |\r\n| beforeopen     | Fired before a dropdown menu opens (cancelable)                                               |\r\n| open           | Fired after a dropdown menu opens (not cancelable)                                            |\r\n| beforeclose    | Fired before a dropdown menu closes (cancelable)                                              |\r\n| close          | Fired after a dropdown menu closes (not cancelable)                                           |\r\n\r\n### Known Issues\r\n\r\n* The blur and focus callbacks are not very reliable in IE7. The change callback works fine.\r\n\r\n## Credits\r\n\r\nOriginal plugin by Cory LaViska of A Beautiful Site, LLC. (http://www.abeautifulsite.net/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}